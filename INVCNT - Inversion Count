    #include<bits/stdc++.h>
    using namespace std;
    int tree[200005];
    void build(int idx,int val,int n){
        while(idx<=n){
            tree[idx]+=val;
            idx+=(idx&(-idx));
        }
    }
    long long query(int idx){
        long long sum=0LL;
        while(idx>0){
            sum+=tree[idx];
            idx-=(idx&(-idx));
        }
        return sum;
    }
    int main(){
        int t;
        cin>>t;
        while(t--){
            int n;
            cin>>n;
            int b[n+5];long long ans=0LL;
            int a[n+5];
            memset(tree,0,sizeof(tree));
            for(int i=0; i<n; i++){
                cin>>a[i];
                b[i]=a[i];
            }
            sort(b,b+n);
            for(int i=0;i<n;i++){
                int pos=lower_bound(b,b+n,a[i])-b;
                a[i]=pos+1;
            }
            for(int i=n-1;i>=0;i--){
                ans+=query(a[i]);
                build(a[i],1,n);
            }
            cout<<ans<<endl;
        }
    }
    
