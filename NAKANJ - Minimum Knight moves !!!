#include <bits/stdc++.h>
using namespace std;
int dx[8]={2,2,-2,-2,1,1,-1,-1};
int dy[8]={1,-1,1,-1,2,-2,2,-2};
map<pair<int,int>,int>vis,level;

void bfs(int u,int v){
    queue<pair<int,int> >q;
    q.push({u,v});
    vis[{u,v}]=1;
    level[{u,v}]=1;
    while(!q.empty()){
        pair<int,int>pa;
        pa=q.front();
        int x=pa.first;
        int y=pa.second;
        q.pop();
        for(int i=0;i<8;i++){
            int xx=x+dx[i];
            int yy=y+dy[i];
            if(xx>=1 && yy>=1 && xx<=8 && yy<=8 && vis[{xx,yy}]==0){
                vis[{xx,yy}]=1;
                level[{xx,yy}]=level[{x,y}]+1;
                q.push({xx,yy});
            }
        }
    }
 
}
int main()
{
    int t;
    cin>>t;
    while(t--){
        string s1,s2;
        cin>>s1>>s2;
        int x1,x2,y1,y2;
        y1=s1[1]-48;y2=s2[1]-48;
        x1=(s1[0]-'a')+1;
        x2=(s2[0]-'a')+1;
        vis.clear();
        level.clear();
        bfs(x1,y1);
        cout<<level[{x2,y2}]-1<<endl;
    }
}
